     1                                  ;c2.asm
     2                                  extern printf
     3                                  %macro Dis_R 2 ; %1 - String to be displated, %2 result to display
     4                                  	section .data
     5                                  	section .text
     6                                  		mov rdi, fmtint
     7                                  		mov rsi, %1
     8                                  		mov rdx,[%2]
     9                                  		mov rax,0
    10                                  		call printf
    11                                  %endmacro
    12                                  section .data
    13 00000000 8000000000000000        	number1 dq 128
    14 00000008 1300000000000000        	number2 dq 19
    15 00000010 F4FFFFFFFFFFFFFF        	neg_num dq -12
    16                                  
    17 00000018 546865206E756D6265-     	fmt db "The numbers are %ld and %ld",10,0
    17 00000021 72732061726520256C-
    17 0000002A 6420616E6420256C64-
    17 00000033 0A00               
    18 00000035 257320256C640A00        	fmtint db "%s %ld",10,0
    19 0000003D 5468652053756D2069-     	sumi db "The Sum is",0
    19 00000046 7300               
    20 00000048 546865204469666620-     	difi db "The Diff is",0
    20 00000051 697300             
    21 00000054 4E756D626572312031-     	inci db "Number1 1 inceremented:",0
    21 0000005D 20696E636572656D65-
    21 00000066 6E7465643A00       
    22 0000006C 4E756D626572312031-     	deci db "Number1 1 Decremented:",0
    22 00000075 2044656372656D656E-
    22 0000007E 7465643A00         
    23 00000083 4E756D626572312031-     	sali db "Number1 1 Shift left 2 (x4):",0
    23 0000008C 205368696674206C65-
    23 00000095 667420322028783429-
    23 0000009E 3A00               
    24 000000A0 4E756D626572312031-     	sari db "Number1 1 Shift right 2 (/4):",0
    24 000000A9 205368696674207269-
    24 000000B2 676874203220282F34-
    24 000000BB 293A00             
    25 000000BE 4E756D626572203120-     	sariex db "Number 1 Shift right 2(/4) with sign etension:",0
    25 000000C7 536869667420726967-
    25 000000D0 68742032282F342920-
    25 000000D9 77697468207369676E-
    25 000000E2 206574656E73696F6E-
    25 000000EB 3A00               
    26                                  	;		db "sign etenstion:",0 ; error in book?
    27 000000ED 5468652070726F6475-     	multi db "The product is ",0
    27 000000F6 63742069732000     
    28 000000FD 54686520496E746572-     	divi db "The Interfer quotient is",0
    28 00000106 6665722071756F7469-
    28 0000010F 656E7420697300     
    29 00000116 546865204D6F64756C-     	remi db "The Module is",0
    29 0000011F 6520697300         
    30                                  
    31                                  section .bss
    32 00000000 <res 00000008>          	resulti resq 1
    33 00000008 <res 00000008>          	modulo resq 1
    34                                  section .text
    35                                  	global main
    36                                  main:
    37 00000000 55                      	push rbp,
    38 00000001 4889E5                  	mov rbp,rsp
    39                                  
    40                                  	;Displaysing numbers
    41 00000004 48BF-                   	mov rdi, fmt
    41 00000006 [1800000000000000] 
    42 0000000E 488B3425[00000000]      	mov rsi, [number1]
    43 00000016 488B1425[08000000]      	mov rdx, [number2]
    44 0000001E B800000000              	mov rax, 0
    45 00000023 E8(00000000)            	call printf
    46                                  
    47                                  	;Adding
    48 00000028 488B0425[00000000]      	mov rax, [number1]
    49 00000030 48030425[08000000]      	add rax, [number2]
    50 00000038 48890425[00000000]      	mov [resulti],rax
    51                                  	;Display results
    52 00000040 48BF-                   	mov rdi, fmtint
    52 00000042 [3500000000000000] 
    53 0000004A 48BE-                   	mov rsi, sumi
    53 0000004C [3D00000000000000] 
    54 00000054 488B1425[00000000]      	mov rdx, [resulti]
    55 0000005C B800000000              	mov rax,0
    56 00000061 E8(00000000)            	call printf
    57                                  	;Subtracting
    58 00000066 488B0425[00000000]      	mov rax, [number1]
    59 0000006E 482B0425[08000000]      	sub rax, [number2]
    60 00000076 48890425[00000000]      	mov [resulti],rax
    61                                  	Dis_R difi, resulti
    61                              <1>  section .data
    61                              <1>  section .text
    61 0000007E 48BF-               <1>  mov rdi, fmtint
    61 00000080 [3500000000000000]  <1>
    61 00000088 48BE-               <1>  mov rsi, %1
    61 0000008A [4800000000000000]  <1>
    61 00000092 488B1425[00000000]  <1>  mov rdx,[%2]
    61 0000009A B800000000          <1>  mov rax,0
    61 0000009F E8(00000000)        <1>  call printf
    62                                  
    63                                  	;++
    64 000000A4 488B0425[00000000]      	mov rax, [number1]
    65 000000AC 48FFC0                  	inc rax
    66 000000AF 48890425[00000000]      	mov [resulti],rax
    67                                  	Dis_R inci, resulti
    67                              <1>  section .data
    67                              <1>  section .text
    67 000000B7 48BF-               <1>  mov rdi, fmtint
    67 000000B9 [3500000000000000]  <1>
    67 000000C1 48BE-               <1>  mov rsi, %1
    67 000000C3 [5400000000000000]  <1>
    67 000000CB 488B1425[00000000]  <1>  mov rdx,[%2]
    67 000000D3 B800000000          <1>  mov rax,0
    67 000000D8 E8(00000000)        <1>  call printf
    68                                  
    69                                  	;--
    70 000000DD 488B0425[00000000]      	mov rax, [number1]
    71 000000E5 48FFC8                  	dec rax
    72 000000E8 48890425[00000000]      	mov [resulti], rax
    73                                  	Dis_R deci, resulti
    73                              <1>  section .data
    73                              <1>  section .text
    73 000000F0 48BF-               <1>  mov rdi, fmtint
    73 000000F2 [3500000000000000]  <1>
    73 000000FA 48BE-               <1>  mov rsi, %1
    73 000000FC [6C00000000000000]  <1>
    73 00000104 488B1425[00000000]  <1>  mov rdx,[%2]
    73 0000010C B800000000          <1>  mov rax,0
    73 00000111 E8(00000000)        <1>  call printf
    74                                  
    75                                  	;shift arithmetic left
    76 00000116 488B0425[00000000]      	mov rax, [number1]
    77 0000011E 48C1E002                	sal rax,2
    78 00000122 48890425[00000000]      	mov [resulti],rax
    79                                  	Dis_R sali, resulti
    79                              <1>  section .data
    79                              <1>  section .text
    79 0000012A 48BF-               <1>  mov rdi, fmtint
    79 0000012C [3500000000000000]  <1>
    79 00000134 48BE-               <1>  mov rsi, %1
    79 00000136 [8300000000000000]  <1>
    79 0000013E 488B1425[00000000]  <1>  mov rdx,[%2]
    79 00000146 B800000000          <1>  mov rax,0
    79 0000014B E8(00000000)        <1>  call printf
    80                                  
    81                                  	;shift arthmetic right
    82 00000150 488B0425[00000000]      	mov rax, [number1]
    83 00000158 48C1F802                	sar rax, 2
    84 0000015C 48890425[00000000]      	mov [resulti], rax
    85                                  	Dis_R sari, resulti
    85                              <1>  section .data
    85                              <1>  section .text
    85 00000164 48BF-               <1>  mov rdi, fmtint
    85 00000166 [3500000000000000]  <1>
    85 0000016E 48BE-               <1>  mov rsi, %1
    85 00000170 [A000000000000000]  <1>
    85 00000178 488B1425[00000000]  <1>  mov rdx,[%2]
    85 00000180 B800000000          <1>  mov rax,0
    85 00000185 E8(00000000)        <1>  call printf
    86                                  
    87                                  	;shift right with sign
    88 0000018A 488B0425[10000000]      	mov rax, [neg_num]
    89 00000192 48C1F802                	sar rax, 2
    90 00000196 48890425[00000000]      	mov [resulti], rax
    91                                  	Dis_R sariex, resulti
    91                              <1>  section .data
    91                              <1>  section .text
    91 0000019E 48BF-               <1>  mov rdi, fmtint
    91 000001A0 [3500000000000000]  <1>
    91 000001A8 48BE-               <1>  mov rsi, %1
    91 000001AA [BE00000000000000]  <1>
    91 000001B2 488B1425[00000000]  <1>  mov rdx,[%2]
    91 000001BA B800000000          <1>  mov rax,0
    91 000001BF E8(00000000)        <1>  call printf
    92                                  	
    93                                  	;multi
    94 000001C4 488B0425[00000000]      	mov rax, [number1]
    95 000001CC 48F72C25[08000000]      	imul qword [number2]
    96 000001D4 48890425[00000000]      	mov [resulti],rax
    97                                  	Dis_R multi, resulti
    97                              <1>  section .data
    97                              <1>  section .text
    97 000001DC 48BF-               <1>  mov rdi, fmtint
    97 000001DE [3500000000000000]  <1>
    97 000001E6 48BE-               <1>  mov rsi, %1
    97 000001E8 [ED00000000000000]  <1>
    97 000001F0 488B1425[00000000]  <1>  mov rdx,[%2]
    97 000001F8 B800000000          <1>  mov rax,0
    97 000001FD E8(00000000)        <1>  call printf
    98                                  
    99                                  	;divide
   100 00000202 488B0425[00000000]      	mov rax, [number1]
   101 0000020A BA00000000              	mov rdx, 0 ; rdx must be 0 if we want to use remander value as the commond only replaces the lower bits.
   102 0000020F 48F73C25[08000000]      	idiv qword [number2]
   103 00000217 48890425[00000000]      	mov [resulti], rax
   104 0000021F 48891425[08000000]      	mov [modulo], rdx
   105                                  	Dis_R divi, resulti
   105                              <1>  section .data
   105                              <1>  section .text
   105 00000227 48BF-               <1>  mov rdi, fmtint
   105 00000229 [3500000000000000]  <1>
   105 00000231 48BE-               <1>  mov rsi, %1
   105 00000233 [FD00000000000000]  <1>
   105 0000023B 488B1425[00000000]  <1>  mov rdx,[%2]
   105 00000243 B800000000          <1>  mov rax,0
   105 00000248 E8(00000000)        <1>  call printf
   106                                  	Dis_R remi, modulo
   106                              <1>  section .data
   106                              <1>  section .text
   106 0000024D 48BF-               <1>  mov rdi, fmtint
   106 0000024F [3500000000000000]  <1>
   106 00000257 48BE-               <1>  mov rsi, %1
   106 00000259 [1601000000000000]  <1>
   106 00000261 488B1425[08000000]  <1>  mov rdx,[%2]
   106 00000269 B800000000          <1>  mov rax,0
   106 0000026E E8(00000000)        <1>  call printf
   107                                  
   108                                  	;call clean exit
   109 00000273 B83C000000              	mov rax, 60 ; 60 = exit 
   110 00000278 BF00000000              	mov rdi, 0 ; 0 = success exit code
   111 0000027D 0F05                    	syscall ; quit application
